{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { FontAwesome } from '@expo/vector-icons';\nimport * as Location from 'expo-location';\nimport axios from 'axios';\nimport tw from 'twrnc';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function HomeScreen() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    location = _useState2[0],\n    setLocation = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    errorMsg = _useState4[0],\n    setErrorMsg = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    country = _useState6[0],\n    setCountry = _useState6[1];\n  var _useState7 = useState(''),\n    _useState8 = _slicedToArray(_useState7, 2),\n    currentTime = _useState8[0],\n    setCurrentTime = _useState8[1];\n  var _useState9 = useState(''),\n    _useState10 = _slicedToArray(_useState9, 2),\n    currentSeconds = _useState10[0],\n    setCurrentSeconds = _useState10[1];\n  useEffect(function () {\n    _asyncToGenerator(function* () {\n      var _yield$Location$reque = yield Location.requestForegroundPermissionsAsync(),\n        status = _yield$Location$reque.status;\n      if (status !== 'granted') {\n        setErrorMsg('Permission to access location was denied');\n        return;\n      }\n      var _yield$Location$getCu = yield Location.getCurrentPositionAsync({}),\n        coords = _yield$Location$getCu.coords;\n      setLocation(coords);\n      var reverseGeocodingUrl = `https://api.opencagedata.com/geocode/v1/json?q=${coords.latitude}+${coords.longitude}&key=35d96259721142acba68b961a47b5ff3`;\n      axios.get(reverseGeocodingUrl).then(function (response) {\n        var data = response.data;\n        var results = data.results;\n        if (results.length > 0) {\n          var countryName = results[0].components.country;\n          setCountry(countryName);\n        } else {\n          console.log('No results found for the given location.');\n        }\n      }).catch(function (error) {\n        console.error('Error reverse geocoding:', error);\n        setCountry('Unknown');\n      });\n    })();\n  }, []);\n  useEffect(function () {\n    var interval = setInterval(function () {\n      var date = new Date();\n      var timeString = `${date.getHours()}:${date.getMinutes().toString().padStart(2, '0')}`;\n      setCurrentTime(timeString);\n      setCurrentSeconds(date.getSeconds().toString().padStart(2, '0'));\n    }, 1000);\n    return function () {\n      clearInterval(interval);\n    };\n  }, []);\n  var text = 'Waiting...';\n  if (errorMsg) {\n    text = errorMsg;\n  } else if (location) {\n    text = `${country}`;\n  }\n  return _jsx(View, {\n    style: tw`pt-10 px-3`,\n    children: _jsxs(ScrollView, {\n      children: [_jsxs(View, {\n        style: tw`flex-row justify-between items-center mb-4`,\n        children: [_jsx(Text, {\n          style: tw`font-semibold text-2xl`,\n          children: \"Hello, Nat\"\n        }), _jsx(View, {\n          style: tw`p-2 bg-gray-400 rounded-full`,\n          children: _jsx(FontAwesome, {\n            name: \"user\",\n            size: 24,\n            color: \"black\"\n          })\n        })]\n      }), _jsxs(View, {\n        children: [_jsxs(Text, {\n          style: tw`font-bold text-xl`,\n          children: [\"Current Location: \", text]\n        }), _jsxs(View, {\n          style: tw`flex-row items-center`,\n          children: [_jsx(Text, {\n            style: tw`text-lg font-bold`,\n            children: \"Safest Rate: 3 \"\n          }), _jsx(FontAwesome, {\n            name: \"star\",\n            size: 18,\n            color: \"gold\"\n          })]\n        })]\n      }), _jsxs(View, {\n        style: tw`flex-1 bg-green-700 py-8 mt-3 rounded-2xl mb-4 `,\n        children: [_jsxs(Text, {\n          style: tw`text-7xl text-center font-bold text-white`,\n          children: [currentTime, \":\", currentSeconds]\n        }), _jsxs(Text, {\n          style: tw`text-center text-white text-base font-bold`,\n          children: [\"Currently in \", country]\n        })]\n      }), _jsx(View, {\n        children: _jsxs(View, {\n          style: tw`w-full p-3`,\n          children: [_jsx(Text, {\n            style: tw`text-lg font-bold`,\n            children: \"Historical Places\"\n          }), _jsx(View, {\n            style: tw`py-3`,\n            children: _jsxs(ScrollView, {\n              horizontal: true,\n              showsHorizontalScrollIndicator: false,\n              children: [_jsx(View, {\n                style: tw`w-80 bg-gray-300 h-70 mr-6`\n              }), _jsx(View, {\n                style: tw`w-80 bg-gray-300 h-70 mr-6`\n              }), _jsx(View, {\n                style: tw`w-80 bg-gray-300 h-70 mr-6`\n              })]\n            })\n          })]\n        })\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","View","Text","ScrollView","FontAwesome","Location","axios","tw","jsx","_jsx","jsxs","_jsxs","HomeScreen","_useState","_useState2","_slicedToArray","location","setLocation","_useState3","_useState4","errorMsg","setErrorMsg","_useState5","_useState6","country","setCountry","_useState7","_useState8","currentTime","setCurrentTime","_useState9","_useState10","currentSeconds","setCurrentSeconds","_asyncToGenerator","_yield$Location$reque","requestForegroundPermissionsAsync","status","_yield$Location$getCu","getCurrentPositionAsync","coords","reverseGeocodingUrl","latitude","longitude","get","then","response","data","results","length","countryName","components","console","log","catch","error","interval","setInterval","date","Date","timeString","getHours","getMinutes","toString","padStart","getSeconds","clearInterval","text","style","children","name","size","color","horizontal","showsHorizontalScrollIndicator"],"sources":["/home/nathnael/Documents/Refugee-App/client/screens/homeScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { View, Text, ScrollView } from 'react-native';\nimport { FontAwesome } from '@expo/vector-icons';\nimport * as Location from 'expo-location';\nimport axios from 'axios';\n\nimport tw from 'twrnc';\n\nexport default function HomeScreen() {\n  const [location, setLocation] = useState(null);\n  const [errorMsg, setErrorMsg] = useState(null);\n  const [country, setCountry] = useState(null);\n  const [currentTime, setCurrentTime] = useState('');\n  const [currentSeconds, setCurrentSeconds] = useState('');\n\n  useEffect(() => {\n    (async () => {\n      // Request permission to access the device's location\n      let { status } = await Location.requestForegroundPermissionsAsync();\n\n      if (status !== 'granted') {\n        setErrorMsg('Permission to access location was denied');\n        return;\n      }\n\n      // Get the current location\n      let { coords } = await Location.getCurrentPositionAsync({});\n\n      // Set the location data\n      setLocation(coords);\n\n      // Reverse geocode to get the country\n      const reverseGeocodingUrl = `https://api.opencagedata.com/geocode/v1/json?q=${coords.latitude}+${coords.longitude}&key=35d96259721142acba68b961a47b5ff3`;\n\n      axios\n        .get(reverseGeocodingUrl)\n        .then((response) => {\n          const { data } = response;\n          const { results } = data;\n\n          if (results.length > 0) {\n            const countryName = results[0].components.country;\n            setCountry(countryName);\n          } else {\n            console.log('No results found for the given location.');\n          }\n        })\n        .catch((error) => {\n          console.error('Error reverse geocoding:', error);\n          setCountry('Unknown');\n        });\n    })();\n  }, []);\n\n  useEffect(() => {\n    // Update the current time every second\n    const interval = setInterval(() => {\n      const date = new Date();\n      const timeString = `${date.getHours()}:${date.getMinutes().toString().padStart(2, '0')}`;\n      setCurrentTime(timeString);\n      setCurrentSeconds(date.getSeconds().toString().padStart(2, '0'));\n    }, 1000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, []);\n\n  let text = 'Waiting...';\n  if (errorMsg) {\n    text = errorMsg;\n  } else if (location) {\n    text = `${country}`;\n  }\n\n  return (\n    <View style={tw`pt-10 px-3`}>\n      <ScrollView>\n        <View style={tw`flex-row justify-between items-center mb-4`}>\n          <Text style={tw`font-semibold text-2xl`}>Hello, Nat</Text>\n          <View style={tw`p-2 bg-gray-400 rounded-full`}>\n            <FontAwesome name=\"user\" size={24} color=\"black\" />\n          </View>\n        </View>\n        <View>\n          <Text style={tw`font-bold text-xl`}>Current Location: {text}</Text>\n          <View style={tw`flex-row items-center`}>\n            <Text style={tw`text-lg font-bold`}>Safest Rate: 3 </Text>\n            <FontAwesome name=\"star\" size={18} color=\"gold\" />\n          </View>\n        </View>\n        <View style={tw`flex-1 bg-green-700 py-8 mt-3 rounded-2xl mb-4 `}>\n          <Text style={tw`text-7xl text-center font-bold text-white`}>{currentTime}:{currentSeconds}</Text>\n          <Text style={tw`text-center text-white text-base font-bold`}>\n            Currently in {country}\n          </Text>\n        </View>\n        <View>\n          <View style={tw`w-full p-3`}>\n            <Text style={tw`text-lg font-bold`}>Historical Places</Text>\n            <View style={tw`py-3`}>\n              <ScrollView horizontal showsHorizontalScrollIndicator={false}>\n                <View style={tw`w-80 bg-gray-300 h-70 mr-6`} ></View>\n                <View style={tw`w-80 bg-gray-300 h-70 mr-6`} />\n                <View style={tw`w-80 bg-gray-300 h-70 mr-6`} />\n              </ScrollView>\n            </View>\n          </View>\n        </View>\n      </ScrollView>\n    </View>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}